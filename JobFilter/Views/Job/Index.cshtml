@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<JobFilter.Models.DataStructure.Job>

<link href="~/css/JobList.css" rel="stylesheet">
<h4 class="text-danger">符合的工作數量 : @ViewBag.numOfJob</h4>
<hr />

@foreach (var job in Model)
{
    <div class="Row">
        <a href="@job.Link" target="_blank" class="MyLink">@job.Title</a>
        <br>
        <div class="Company">@job.Company</div>
        <strong class="AreaAndLimit">@job.Area&nbsp;&nbsp;@job.Experience&nbsp;&nbsp;@job.Education</strong>
        <br>
        <div class="PartialContent">@job.PartialContent</div>
        <br>
        <div class="Wage">
            @job.WageRange &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <span>
                @Html.ActionLink("封鎖此公司", "AddBlockCompany", "Setting", new { CompanyName = job.Company, returnPage = Model.PageNumber })
            </span>
        </div>
    </div>
    <br>
}

Page @(Model.PageCount< Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
    new X.PagedList.Mvc.Core.Common.PagedListRenderOptions
    {
        LinkToPreviousPageFormat = "上一頁",
        LinkToNextPageFormat = "下一頁"
    })

