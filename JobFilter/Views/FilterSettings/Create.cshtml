@model JobFilter.Models.FilterSetting
@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

<h1>新增設定</h1>
<h5>★ 欲排除的關鍵字和公司名稱若有多個，請以逗點做分隔</h5>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" onsubmit="return CheckValue()">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="CrawlUrl" class="control-label">目標網址</label>
                <input asp-for="CrawlUrl" class="form-control" id="CrawlUrl" />
                <span asp-validation-for="CrawlUrl" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MinimumWage" class="control-label">最低月薪(不能低於)</label>
                <input type="text" asp-for="MinimumWage" class="form-control" id="MinimumWage" />
                <span asp-validation-for="MinimumWage" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MaximumWage" class="control-label">最高月薪(不能低於)</label>
                <input type="text" asp-for="MaximumWage" class="form-control" id="MaximumWage" />
                <span asp-validation-for="MaximumWage" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ExcludeWord" class="control-label">排除關鍵字</label>
                <input asp-for="ExcludeWord" class="form-control" id="ExcludeWord" />
                <span asp-validation-for="ExcludeWord" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IgnoreCompany" class="control-label">排除公司</label>
                <input asp-for="IgnoreCompany" class="form-control" id="IgnoreCompany" />
                <span asp-validation-for="IgnoreCompany" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Remarks" class="control-label">備註</label>
                <input asp-for="Remarks" class="form-control" id="Remarks" />
                <span asp-validation-for="Remarks" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="建立" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    @{
        int? TryGetPage = HttpContextAccessor.HttpContext.Session.GetInt32("returnPage");
        int page = TryGetPage != null ? (int)TryGetPage : 1;
    }
    @Html.ActionLink("返回列表", "Index", "FilterSettings", new { page = @page })
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script src="/lib/jquery/dist/jquery.min.js"></script>
<script>
    function IsValidString(value) {
        for (var i = 0; i < value.length; i++) {
            var CharCode = value[i].charCodeAt();
            if (!(value[i] == ',' || value[i] == '_' || value[i] == '+' || value[i] == ' ' ||
                CharCode > 47 && CharCode < 58 ||
                CharCode > 64 && CharCode < 91 ||
                CharCode > 96 && CharCode < 123 ||
                CharCode > 0x4E00 && CharCode < 0x9FA5)) {
                alert("只能輸入中英文、數字、逗點、底線、加號、空白");
                return false;
            }
        }
        return true;
    }
    function CheckValue() {
        // 檢查目標網址
        var CrawlUrl = document.getElementById("CrawlUrl");
        var TargetUrlHead = "https://www.104.com.tw/jobs/search/";
        if (CrawlUrl.value.length < 1 || !CrawlUrl.value.startsWith(TargetUrlHead)) {
            alert("網址開頭必須是" + TargetUrlHead);
            return false;
        }
        // 檢查最高月薪是否大於等於最低月薪
        var MaxWage = document.getElementById("MaximumWage").value;
        var MinWage = document.getElementById("MinimumWage").value;
        if (MaxWage < MinWage) {
            alert("最高月薪必須大於或等於最低月薪!");
            return false;
        }
        // 檢查想排除的關鍵字
        if (!IsValidString(document.getElementById("ExcludeWord").value))
            return false;

        // 檢查想排除的公司
        if (!IsValidString(document.getElementById("IgnoreCompany").value))
            return false;

        // 檢查備註
        if (!IsValidString(document.getElementById("Remarks").value))
            return false;

        return true;
    }
    // 攔截最低月薪的輸入
    $('#MinimumWage').on("input", function (e) {
        var value = document.getElementById("MinimumWage").value;
        // 將輸入修正成只有數字
        var InputModify = "";
        for (var i = 0; i < value.length; i++) {
            if (value[i].charCodeAt() > 47 && value[i].charCodeAt() < 58) {
                InputModify += value[i];
            }
        }
        document.getElementById("MinimumWage").value = InputModify;
        // 限制輸入長度
        if (value.length > 6) {
            document.getElementById("MinimumWage").value = value.substr(0, 6);
        }
    });
    // 攔截最高月薪的輸入
    $('#MaximumWage').on("input", function (e) {
        var value = document.getElementById("MaximumWage").value;
        // 將輸入修正成只有數字
        var InputModify = "";
        for (var i = 0; i < value.length; i++) {
            if (value[i].charCodeAt() > 47 && value[i].charCodeAt() < 58) {
                InputModify += value[i];
            }
        }
        document.getElementById("MaximumWage").value = InputModify;
        // 限制輸入長度
        if (value.length > 7) {
            document.getElementById("MaximumWage").value = value.substr(0, 7);
        }
    });
</script>