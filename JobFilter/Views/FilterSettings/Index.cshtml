@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<FilterSetting>

<h1>設定列表</h1>
<span class="text-danger">@TempData["CreateSettingError"]</span>

<p>
    @Html.ActionLink("新增設定(最多10筆)", "Create", new { returnPage = Model.PageNumber })<span>&nbsp; &nbsp; &nbsp;</span>
    @if (User.Identity.Name == AuthorizeManager.SuperAdmin)
    {
        @Html.ActionLink("所有設定", "SetSessionForCheckAllSettings", new { returnPage = Model.PageNumber })<span>&nbsp; &nbsp; &nbsp;</span>
        @Html.ActionLink("個人設定", "RemoveSessionOfCheckAllSettings", new { returnPage = Model.PageNumber })<span>&nbsp; &nbsp; &nbsp;</span>
        <a asp-action="DeleteAll">刪除全部</a><span>&nbsp; &nbsp; &nbsp;</span>
        <a asp-controller="CSV" asp-action="ExportFilterSetting">匯出資料</a><span>&nbsp; &nbsp; &nbsp;</span>
        <a asp-controller="CSV" asp-action="ImportFilterSetting">匯入資料</a><span>&nbsp; &nbsp; &nbsp;</span>
    }
</p>
<table class="table">
    <thead>
        <tr>
            <th style="white-space: nowrap;">
                設定人員
            </th>
            <th style="white-space: nowrap;">
                目標網址
            </th>
            <th style="white-space: nowrap;">
                最低薪資
            </th>
            <th style="white-space: nowrap;">
                排除關鍵字
            </th>
            <th style="white-space: nowrap;">
                排除公司
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td style="white-space: nowrap;">
                    @Html.DisplayFor(modelItem => item.UserEmail)
                </td>
                <td style="white-space: nowrap;">
                    @{
                        if (string.IsNullOrEmpty(item.CrawlUrl))
                        {
                            <span>無</span>
                        }
                        else if (item.CrawlUrl.Length < 19)
                        {

                            <span>@item.CrawlUrl</span>
                        }
                        else
                        {
                            @item.CrawlUrl.Substring(0, 19)
                            <span>...</span>
                        }
                    }
                </td>
                <td style="white-space: nowrap;">
                    @Html.DisplayFor(modelItem => item.MinimumWage)
                </td>
                <td style="white-space: nowrap;">
                    @{
                        if (string.IsNullOrEmpty(item.ExcludeWord))
                        {
                            <span>無</span>
                        }
                        else if (item.ExcludeWord.Length < 23)
                        {

                            <span>@item.ExcludeWord</span>
                        }
                        else
                        {
                            @item.ExcludeWord.Substring(0, 23)
                            <span>...</span>
                        }
                    }
                </td>
                <td style="white-space: nowrap;">
                    @{
                        if (string.IsNullOrEmpty(item.IgnoreCompany))
                        {
                            <span>無</span>
                        }
                        else if (item.IgnoreCompany.Length < 22)
                        {

                            <span>@item.IgnoreCompany</span>
                        }
                        else
                        {
                            @item.IgnoreCompany.Substring(0, 22)
                            <span>...</span>
                        }
                    }
                </td>
                <td style="white-space: nowrap;">
                    @Html.ActionLink("執行 |", "DoCrawl", "JobFilter", new { id = item.Id })
                    @Html.ActionLink("編輯 |", "Edit", new { id = item.Id, returnPage = Model.PageNumber })
                    @Html.ActionLink("刪除", "Delete", new { id = item.Id, returnPage = Model.PageNumber })
                </td>
            </tr>
        }
    </tbody>
</table>

Page @(Model.PageCount< Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
    new X.PagedList.Mvc.Core.Common.PagedListRenderOptions
    {
        LinkToPreviousPageFormat = "上一頁",
        LinkToNextPageFormat = "下一頁"
    })

