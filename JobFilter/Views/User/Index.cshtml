@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<Microsoft.AspNetCore.Identity.IdentityUser>
<h3>用戶列表</h3>

<p>
    @Html.ActionLink("建立用戶", "Create", new { returnPage = Model.PageNumber })&nbsp;&nbsp;&nbsp;
    <a asp-action="DeleteAll">刪除全部</a>&nbsp;&nbsp;&nbsp;
    <a asp-controller="CSV" asp-action="ExportUser">匯出資料</a>&nbsp;&nbsp;&nbsp;
    <a asp-controller="CSV" asp-action="ImportUser">匯入資料</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayName("Email")</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(model => item.Email)</td>
                <td style="white-space: nowrap;">
                    @Html.ActionLink("編輯 |", "Edit", new { id = item.Id, returnPage = Model.PageNumber })
                    @Html.ActionLink("刪除", "Delete", new { id = item.Id, returnPage = Model.PageNumber })
                </td>
            </tr>
        }
    </tbody>
</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
    new X.PagedList.Mvc.Core.Common.PagedListRenderOptions
    {
        LinkToPreviousPageFormat = "上一頁",
        LinkToNextPageFormat = "下一頁"
    })